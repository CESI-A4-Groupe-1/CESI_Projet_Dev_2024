version: "3.9"
networks:
    app-network:
volumes:
    db_data:


services:
    orders_deliveries:
        build:
            context: services/orders_deliveries
            dockerfile: Dockerfile
            target: base
        volumes:
            - ./services/orders_deliveries/src:/home/node/app/src
            - ./services/orders_deliveries/nodemon.json:/home/node/app/nodemon.json
        container_name: orders_deliveries
        expose:
            - "${ORDERS_PORT}"
        ports:
            -   "${ORDERS_PORT}:${ORDERS_PORT}"
        command: npm run dev
        networks:
            - app-network
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
            MYSQL_HOST: "${MYSQL_HOST}"
            MYSQL_PORT: "${MYSQL_PORT}"
    accounts:
        build:
            context: services/accounts
            dockerfile: Dockerfile
            target: base
        volumes:
            - ./services/accounts/src:/home/node/app/src
            - ./services/accounts/nodemon.json:/home/node/app/nodemon.json
        container_name: accounts
        expose:
            - "${ACCOUNTS_PORT}"
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
            MYSQL_HOST: "${MYSQL_HOST}"
            MYSQL_PORT: "${MYSQL_PORT}"

        ports:
            - "${ACCOUNTS_PORT}:${ACCOUNTS_PORT}"
        command: npm run dev
        networks:
            - app-network
        depends_on:
            - db
    restaurants:

        build:
            context: services/restaurants
            dockerfile: Dockerfile
            target: base
        volumes:
            - ./services/restaurants/src:/home/node/app/src
            - ./services/restaurants/nodemon.json:/home/node/app/nodemon.json
        container_name: restaurants
        expose:
            - "${MENUS_PORT}"
        ports:
            - "${MENUS_PORT}:${MENUS_PORT}"
        command: npm run dev
        networks:
            - app-network
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
            MYSQL_HOST: "${MYSQL_HOST}"
            MYSQL_PORT: "${MYSQL_PORT}"

    statistics:
        build:
            context: services/statistics
            dockerfile: Dockerfile
            target: base
        volumes:
            - ./services/statistics/src:/home/node/app/src
            - ./services/statistics/nodemon.json:/home/node/app/nodemon.json
        container_name: statistics
        expose:
            - "${STATISTICS_PORT}"
        ports:
            - "${STATISTICS_PORT}:${STATISTICS_PORT}"
        command: npm run dev
        networks:
            - app-network
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
            MYSQL_HOST: "${MYSQL_HOST}"
            MYSQL_PORT: "${MYSQL_PORT}"

    referrals:
        build:
            context: services/referrals
            dockerfile: Dockerfile
            target: base
        volumes:
            - ./services/referrals/src:/home/node/app/src
            - ./services/referrals/nodemon.json:/home/node/app/nodemon.json
        container_name: referrals
        expose:
            - "${REFERRALS_PORT}"
        ports:
            - "${REFERRALS_PORT}:${REFERRALS_PORT}"
        command: npm run dev
        networks:
            - app-network
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
            MYSQL_HOST: "${MYSQL_HOST}"
            MYSQL_PORT: "${MYSQL_PORT}"
    notifications:
        build:
            context: services/notifications
            dockerfile: Dockerfile
            target: base
        volumes:
            - ./services/notifications/src:/home/node/app/src
            - ./services/notifications/nodemon.json:/home/node/app/nodemon.json
        container_name: notifications
        expose:
            - "${NOTIFICATIONS_PORT}"
        ports:
            - "${NOTIFICATIONS_PORT}:${NOTIFICATIONS_PORT}"
        command: npm run dev
        networks:
            - app-network
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
            MYSQL_HOST: "${MYSQL_HOST}"
            MYSQL_PORT: "${MYSQL_PORT}"
    nginx:
        image: nginx:latest
        container_name: api_gateway
        volumes:
            - ./api_gateway:/etc/nginx/
        ports:
            - "8080:8080"

        networks:
            - app-network
        depends_on:
            - accounts
            - orders_deliveries
            - referrals
            - restaurants
            - notifications
            - statistics

    db:
        image: mysql
        container_name: db
        restart: always
        ports:
            -   "${MYSQL_PORT}:${MYSQL_PORT}"
        volumes:
            - ./db/dump.sql:/docker-entrypoint-initdb.d/dump.sql
            - db_data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"

        networks:
            - app-network